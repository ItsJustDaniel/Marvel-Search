{"version":3,"sources":["api/marvel.js","components/SearchBar.js","components/CharacterCard.js","components/CardList.js","components/CharacterDetails.js","components/randomButton.js","components/LoadMore.js","components/Footer.js","components/App.js","index.js"],"names":["getMarvelCharacters","options","name","id","offset","PUBLIC_KEY","process","console","log","ts","Date","getTime","hash","CryptoJs","MD5","toString","MarvelUrl","fetch","then","res","json","characters","data","results","SearchBar","state","term","onInputChange","e","setState","onFormSubmit","event","preventDefault","props","className","onSubmit","this","type","value","onChange","target","React","Component","CharacterCard","character","onCharacterSelect","image","thumbnail","path","file","extension","to","onClick","src","CardList","isLoading","renderedList","map","Chr","i","class","CharacterDetails","selectedCard","detail","urls","find","url","description","href","RandomButton","handleRandom","random","Math","floor","LoadMore","onLoadClick","Footer","imageFound","App","getMarvelResponse","filter","chr","match","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.763935d8.chunk.js","sourcesContent":["import CryptoJs from \"crypto-js\";\n\nfunction getMarvelCharacters(options) {\n  const { id, name, offset } = { ...options };\n\n  const PUBLIC_KEY = process.env.REACT_APP_PUBLIC;\n  const PRIV_KEY = process.env.REACT_APP_PRIVATE;\n  console.log(PUBLIC_KEY);\n  const ts = new Date().getTime();\n  const hash = CryptoJs.MD5(ts + PRIV_KEY + PUBLIC_KEY).toString();\n  const MarvelUrl = `https://gateway.marvel.com/v1/public/characters?ts=${ts}&apikey=${PUBLIC_KEY}&hash=${hash}&offset=${offset}${name}`;\n\n  console.log(MarvelUrl);\n  return fetch(MarvelUrl)\n    .then((res) => res.json())\n    .then((res) => {\n      return {\n        characters: res.data.results,\n      };\n    });\n}\n\nexport default getMarvelCharacters;\n","import React from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  state = { term: \"\" };\n\n  onInputChange = (e) => {\n    this.setState({ term: e });\n  };\n\n  onFormSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onFormSubmit(this.state.term);\n  };\n  render() {\n    return (\n      <div>\n        <form className=\"form\" onSubmit={this.onFormSubmit}>\n          <div className=\"field\">\n            <label>Search</label>\n            <input\n              className=\"searchbar\"\n              type=\"text\"\n              value={this.state.term}\n              onChange={(e) => {\n                this.setState({ term: e.target.value });\n              }}\n            ></input>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport { Link } from \"react-scroll\";\n\nimport \"./CharacterCard.css\";\n\nconst CharacterCard = ({ character, onCharacterSelect }) => {\n  const image = character.thumbnail.path;\n  const file = character.thumbnail.extension;\n\n  return (\n    <div>\n      <Link to=\"CharacterDetails\">\n        <div\n          className=\"CardContainer\"\n          onClick={() => {\n            onCharacterSelect(character);\n          }}\n        >\n          <img src={`${image}/standard_fantastic.${file}`}></img>\n          <h3 className=\"CharacterName\">{character.name}</h3>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default CharacterCard;\n","import React from \"react\";\nimport CharacterCard from \"./CharacterCard\";\nimport \"./CardList.css\";\n\nconst CardList = ({ characters, onCharacterSelect, isLoading }) => {\n  const renderedList = characters.map((Chr, i) => {\n    return (\n      <CharacterCard\n        key={i}\n        character={Chr}\n        onCharacterSelect={onCharacterSelect}\n      ></CharacterCard>\n    );\n  });\n\n  if (isLoading) {\n    return (\n      <div class=\"CardList\">\n        <div class=\"ui active inverted dimmer\">\n          <div class=\"ui text loader\">Loading</div>\n        </div>\n      </div>\n    );\n  }\n\n  return <div className=\"CardList\">{renderedList}</div>;\n};\n\nexport default CardList;\n","import React from \"react\";\nimport { Element } from \"react-scroll\";\nimport \"./CharacterDetails.css\";\n\nconst CharacterDetails = ({ selectedCard }) => {\n  if (!selectedCard) {\n    return <div></div>;\n  }\n  const image = selectedCard.thumbnail.path;\n  const file = selectedCard.thumbnail.extension;\n  const detail = selectedCard.urls.find(\n    (url) => url.type === \"wiki\" || url.type === \"detail\"\n  );\n  console.log(detail);\n  return (\n    <div>\n      <Element id=\"CharacterDetails\" name=\"CharacterDetails\">\n        <h2>{selectedCard.name}</h2>\n        <div className=\"CharacterProfile\">\n          <img src={`${image}/portrait_uncanny.${file}`}></img>\n          <h3 className=\"CharacterDesc\">\n            {selectedCard.description}{\" \"}\n            <a target=\"_blank\" href={detail.url}>\n              Read More\n            </a>\n          </h3>\n        </div>\n      </Element>\n    </div>\n  );\n};\n\nexport default CharacterDetails;\n","import React from \"react\";\nimport \"./randomButton.css\";\n\nconst RandomButton = ({ handleRandom }) => {\n  const random = Math.floor(Math.random() * 1473);\n  return (\n    <div className=\"button-container\">\n      <button\n        onClick={() => {\n          handleRandom(random);\n        }}\n        className=\"random-button\"\n      >\n        Surprise Me!\n      </button>\n    </div>\n  );\n};\n\nexport default RandomButton;\n","import React from \"react\";\nimport \"./LoadMore.css\";\n\nconst LoadMore = ({ onLoadClick }) => {\n  return (\n    <div className=\"button-container\">\n      <button onClick={() => onLoadClick()} className=\"LoadMore\">\n        Load More\n      </button>\n    </div>\n  );\n};\n\nexport default LoadMore;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => {\n  return <p className=\"Footer\">Data provided by Marvel. Â© 2014 Marvel</p>;\n};\n\nexport default Footer;\n","import React from \"react\";\nimport GetMarvelCharacters from \"../api/marvel\";\nimport SearchBar from \"./SearchBar\";\nimport \"./App.css\";\nimport getMarvelCharacters from \"../api/marvel\";\nimport CardList from \"./CardList\";\nimport CharacterDetails from \"./CharacterDetails\";\nimport RandomButton from \"./randomButton\";\nimport LoadMore from \"./LoadMore\";\nimport { Element } from \"react-scroll\";\nimport Footer from \"./Footer\";\n\nconst imageFound = /image_not_available/gi;\nclass App extends React.Component {\n  state = {\n    characters: [],\n    selectedCard: null,\n    offset: 0,\n    name: null,\n    isLoading: true,\n  };\n  componentDidMount() {\n    this.getMarvelResponse(null, null, this.state.offset);\n  }\n\n  onCharacterSelect = (e) => {\n    this.setState({ selectedCard: e });\n  };\n\n  onFormSubmit = (e) => {\n    this.getMarvelResponse(null, `&nameStartsWith=${e}`, 0);\n  };\n\n  handleRandom = (e) => {\n    this.setState({ isLoading: true });\n    this.getMarvelResponse(null, null, e);\n  };\n\n  getMarvelResponse = (id, name, offset) => {\n    getMarvelCharacters({\n      id: id,\n      name: name,\n      offset: offset,\n    }).then(({ characters }) => {\n      this.setState(\n        {\n          characters: characters.filter(\n            (chr) => !chr.thumbnail.path.match(imageFound)\n          ),\n          selectedCard: null,\n          offset: offset,\n          name: name,\n          isLoading: false,\n        },\n        () => {\n          console.log(this.state.characters);\n        }\n      );\n    });\n  };\n\n  onLoadClick = () => {\n    this.setState({ isLoading: true });\n    getMarvelCharacters({\n      id: null,\n      name: this.state.name,\n      offset: this.state.offset + 20,\n    }).then(({ characters }) => {\n      this.setState(\n        {\n          characters: this.state.characters.concat(\n            characters.filter((chr) => !chr.thumbnail.path.match(imageFound))\n          ),\n          selectedCard: null,\n          offset: this.state.offset + 20,\n          isLoading: false,\n        },\n        () => {\n          console.log(this.state.characters);\n        }\n      );\n    });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <h1 className=\"title\">Marvel Search</h1>\n        <Element id=\"CharacterDetails\" name=\"CharacterDetails\" />\n        <SearchBar onFormSubmit={this.onFormSubmit} />\n        <RandomButton handleRandom={this.handleRandom} />\n        <CharacterDetails selectedCard={this.state.selectedCard} />\n        <CardList\n          characters={this.state.characters}\n          onCharacterSelect={this.onCharacterSelect}\n          isLoading={this.state.isLoading}\n        />\n        <LoadMore onLoadClick={this.onLoadClick} />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./components/App\"\n\nReactDOM.render(<App/>, document.getElementById(\"root\")) "],"sourceRoot":""}